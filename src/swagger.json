{
  "openapi": "3.0.1",
  "info": {
    "title": "librarymanagementsystem-analytics-service API",
    "description": "Produces personal, branch, and admin analytic dashboards; leverages MongoDB aggregation &amp; change streams for real-time and historical analytics; generates usage, trend, and audit reports; stores audit trails; presents localized, personalized, and global analytics; supports compliance.",
    "version": "1.0.0"
  },
  "servers": [],
  "paths": {
    "/analyticsnapshots/{analyticSnapshotId}": {
      "get": {
        "tags": [
          "analyticSnapshot"
        ],
        "summary": "The getAnalyticSnapshot API has 1 parameter.",
        "description": "getAnalyticSnapshot",
        "parameters": [
          {
            "name": "analyticSnapshotId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/getAnalyticSnapshot"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/getAnalyticSnapshot"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/getAnalyticSnapshot"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **analyticSnapshot** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAnalyticSnapshot-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAnalyticSnapshot-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/getAnalyticSnapshot-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "analyticSnapshot"
        ],
        "summary": "The updateAnalyticSnapshot API has 8 parameters.",
        "description": "updateAnalyticSnapshot",
        "parameters": [
          {
            "name": "analyticSnapshotId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateAnalyticSnapshot"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/updateAnalyticSnapshot"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/updateAnalyticSnapshot"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **analyticSnapshot** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateAnalyticSnapshot-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateAnalyticSnapshot-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateAnalyticSnapshot-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "analyticSnapshot"
        ],
        "summary": "The deleteAnalyticSnapshot API has 1 parameter.",
        "description": "deleteAnalyticSnapshot",
        "parameters": [
          {
            "name": "analyticSnapshotId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteAnalyticSnapshot"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteAnalyticSnapshot"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/deleteAnalyticSnapshot"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **analyticSnapshot** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteAnalyticSnapshot-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteAnalyticSnapshot-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteAnalyticSnapshot-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/analyticsnapshots": {
      "post": {
        "tags": [
          "analyticSnapshot"
        ],
        "summary": "The createAnalyticSnapshot API has 7 parameters.",
        "description": "createAnalyticSnapshot",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createAnalyticSnapshot"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/createAnalyticSnapshot"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/createAnalyticSnapshot"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response JSON represents the most comprehensive form of the **analyticSnapshot** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createAnalyticSnapshot-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/createAnalyticSnapshot-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/createAnalyticSnapshot-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "analyticSnapshots"
        ],
        "summary": "The listAnalyticSnapshots API has no parameters.",
        "description": "listAnalyticSnapshots",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/listAnalyticSnapshots"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/listAnalyticSnapshots"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/listAnalyticSnapshots"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **analyticSnapshots** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listAnalyticSnapshots-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/listAnalyticSnapshots-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/listAnalyticSnapshots-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auditlogs/{auditLogId}": {
      "get": {
        "tags": [
          "auditLog"
        ],
        "summary": "The getAuditLog API has 1 parameter.",
        "description": "getAuditLog",
        "parameters": [
          {
            "name": "auditLogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/getAuditLog"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/getAuditLog"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/getAuditLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **auditLog** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAuditLog-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAuditLog-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/getAuditLog-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "auditLog"
        ],
        "summary": "The updateAuditLog API has 7 parameters.",
        "description": "updateAuditLog",
        "parameters": [
          {
            "name": "auditLogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateAuditLog"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/updateAuditLog"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/updateAuditLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **auditLog** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateAuditLog-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateAuditLog-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateAuditLog-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "auditLog"
        ],
        "summary": "The deleteAuditLog API has 1 parameter.",
        "description": "deleteAuditLog",
        "parameters": [
          {
            "name": "auditLogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteAuditLog"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteAuditLog"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/deleteAuditLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **auditLog** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteAuditLog-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteAuditLog-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteAuditLog-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auditlogs": {
      "post": {
        "tags": [
          "auditLog"
        ],
        "summary": "The createAuditLog API has 6 parameters.",
        "description": "createAuditLog",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createAuditLog"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/createAuditLog"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/createAuditLog"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response JSON represents the most comprehensive form of the **auditLog** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createAuditLog-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/createAuditLog-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/createAuditLog-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "auditLogs"
        ],
        "summary": "The listAuditLogs API has no parameters.",
        "description": "listAuditLogs",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/listAuditLogs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/listAuditLogs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/listAuditLogs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **auditLogs** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listAuditLogs-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/listAuditLogs-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/listAuditLogs-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/changestreamevents/{changeStreamEventId}": {
      "get": {
        "tags": [
          "changeStreamEvent"
        ],
        "summary": "The getChangeStreamEvent API has 1 parameter.",
        "description": "getChangeStreamEvent",
        "parameters": [
          {
            "name": "changeStreamEventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/getChangeStreamEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/getChangeStreamEvent"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/getChangeStreamEvent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **changeStreamEvent** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getChangeStreamEvent-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/getChangeStreamEvent-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/getChangeStreamEvent-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "changeStreamEvent"
        ],
        "summary": "The deleteChangeStreamEvent API has 1 parameter.",
        "description": "deleteChangeStreamEvent",
        "parameters": [
          {
            "name": "changeStreamEventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteChangeStreamEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteChangeStreamEvent"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/deleteChangeStreamEvent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **changeStreamEvent** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteChangeStreamEvent-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteChangeStreamEvent-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteChangeStreamEvent-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/changestreamevents": {
      "post": {
        "tags": [
          "changeStreamEvent"
        ],
        "summary": "The createChangeStreamEvent API has 3 parameters.",
        "description": "createChangeStreamEvent",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createChangeStreamEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/createChangeStreamEvent"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/createChangeStreamEvent"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response JSON represents the most comprehensive form of the **changeStreamEvent** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createChangeStreamEvent-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/createChangeStreamEvent-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/createChangeStreamEvent-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "changeStreamEvents"
        ],
        "summary": "The listChangeStreamEvents API has no parameters.",
        "description": "listChangeStreamEvents",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/listChangeStreamEvents"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/listChangeStreamEvents"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/listChangeStreamEvents"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **changeStreamEvents** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listChangeStreamEvents-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/listChangeStreamEvents-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/listChangeStreamEvents-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "errCode": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "getAnalyticSnapshot": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "updateAnalyticSnapshot": {
        "type": "object",
        "properties": {
          "snapshotType": {
            "type": "string",
            "nullable": true
          },
          "scopeType": {
            "type": "string",
            "nullable": true
          },
          "scopeId": {
            "type": "string",
            "nullable": true
          },
          "timeRange": {
            "type": "object",
            "nullable": true
          },
          "data": {
            "type": "object",
            "nullable": true
          },
          "generatedBy": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "deleteAnalyticSnapshot": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "createAnalyticSnapshot": {
        "type": "object",
        "properties": {
          "snapshotType": {
            "type": "string",
            "nullable": false
          },
          "scopeType": {
            "type": "string",
            "nullable": false
          },
          "scopeId": {
            "type": "string",
            "nullable": true
          },
          "timeRange": {
            "type": "object",
            "nullable": false
          },
          "data": {
            "type": "object",
            "nullable": false
          },
          "generatedBy": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "listAnalyticSnapshots": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "getAuditLog": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "updateAuditLog": {
        "type": "object",
        "properties": {
          "actorUserId": {
            "type": "string",
            "nullable": true
          },
          "actionType": {
            "type": "string",
            "nullable": true
          },
          "targetObjectType": {
            "type": "string",
            "nullable": true
          },
          "targetObjectId": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "object",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "deleteAuditLog": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "createAuditLog": {
        "type": "object",
        "properties": {
          "actorUserId": {
            "type": "string",
            "nullable": true
          },
          "actionType": {
            "type": "string",
            "nullable": false
          },
          "targetObjectType": {
            "type": "string",
            "nullable": false
          },
          "targetObjectId": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "object",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "listAuditLogs": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "getChangeStreamEvent": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "deleteChangeStreamEvent": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "createChangeStreamEvent": {
        "type": "object",
        "properties": {
          "streamName": {
            "type": "string",
            "nullable": false
          },
          "payload": {
            "type": "object",
            "nullable": false
          },
          "sourceObject": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "listChangeStreamEvents": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "getAnalyticSnapshot-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "analyticSnapshot": {
            "$ref": "#/components/schemas/analyticSnapshot-object"
          }
        }
      },
      "updateAnalyticSnapshot-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "analyticSnapshot": {
            "$ref": "#/components/schemas/analyticSnapshot-object"
          }
        }
      },
      "deleteAnalyticSnapshot-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "analyticSnapshot": {
            "$ref": "#/components/schemas/analyticSnapshot-object"
          }
        }
      },
      "createAnalyticSnapshot-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "analyticSnapshot": {
            "$ref": "#/components/schemas/analyticSnapshot-object"
          }
        }
      },
      "listAnalyticSnapshots-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "string"
          },
          "analyticSnapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/analyticSnapshots-object"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/paging-object"
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uiPermissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "getAuditLog-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "auditLog": {
            "$ref": "#/components/schemas/auditLog-object"
          }
        }
      },
      "updateAuditLog-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "auditLog": {
            "$ref": "#/components/schemas/auditLog-object"
          }
        }
      },
      "deleteAuditLog-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "auditLog": {
            "$ref": "#/components/schemas/auditLog-object"
          }
        }
      },
      "createAuditLog-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "auditLog": {
            "$ref": "#/components/schemas/auditLog-object"
          }
        }
      },
      "listAuditLogs-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "string"
          },
          "auditLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/auditLogs-object"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/paging-object"
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uiPermissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "getChangeStreamEvent-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "changeStreamEvent": {
            "$ref": "#/components/schemas/changeStreamEvent-object"
          }
        }
      },
      "deleteChangeStreamEvent-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "changeStreamEvent": {
            "$ref": "#/components/schemas/changeStreamEvent-object"
          }
        }
      },
      "createChangeStreamEvent-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "changeStreamEvent": {
            "$ref": "#/components/schemas/changeStreamEvent-object"
          }
        }
      },
      "listChangeStreamEvents-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "string"
          },
          "changeStreamEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/changeStreamEvents-object"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/paging-object"
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uiPermissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "analyticSnapshot-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "analyticSnapshots-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "paging-object": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "number"
          },
          "pageRowCount": {
            "type": "number"
          },
          "totalRowCount": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        }
      },
      "auditLog-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "auditLogs-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "changeStreamEvent-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "changeStreamEvents-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \\r\\n\\r\\n \r\n  Enter 'Bearer' [space] and then your token in the text input below.\r\n                      \\r\\n\\r\\nExample: 'Bearer 12345abcdef'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
